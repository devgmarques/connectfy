generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Follow {
  id         Int    @id @default(autoincrement())
  followedId String @map("followed_id")
  userId     String @map("user_id")
  user       User   @relation(fields: [userId], references: [id])

  @@unique([userId, followedId])
  @@map("follows")
}

model User {
  id       String  @id @default(uuid())
  name     String
  nickname String  @unique
  email    String  @unique
  password String
  details  String?

  posts   Post[]
  likes   Like[]
  follows Follow[]

  createdAt DateTime @default(now()) @map("created_at")

  @@map("users")
}

model Post {
  id     Int    @id @default(autoincrement())
  title  String
  body   String
  author String

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  comments Comment[]
  likes    Like[]

  createdAt DateTime @default(now()) @map("created_at")

  @@map("posts")
}

model Like {
  id Int @id @default(autoincrement())

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  postId Int  @map("post_id")
  post   Post @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  @@unique([userId, postId])
  @@map("likes")
}

model Comment {
  id    Int    @id @default(autoincrement())
  title String
  body  String

  postId Int  @map("post_id")
  post   Post @relation(fields: [postId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  @@map("comments")
}
